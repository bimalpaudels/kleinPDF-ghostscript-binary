name: Build Ghostscript from Source

on:
  workflow_dispatch:

jobs:
  build-ghostscript:
    strategy:
      matrix:
        include:
          - arch: arm64
            runner: macos-latest
            target: macos-arm64
          - arch: x86_64
            runner: macos-13
            target: macos-x86_64
    runs-on: ${{ matrix.runner }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install build dependencies
        run: |
          # Install Xcode command line tools
          xcode-select --install || true

          # Install autoconf if needed
          brew install autoconf || true

      - name: Build Ghostscript from source
        id: build
        run: |
          # Run the build script with CI optimizations
          python3 build_ghostscript.py --cleanup

          # Get the built binary
          if [ ! -f "./bin/ghostscript" ]; then
            echo "❌ Ghostscript binary not found after build"
            exit 1
          fi

          # Get version from binary
          GS_VERSION=$(./bin/ghostscript --version 2>/dev/null | head -1 | awk '{print $3}' || echo "10.05.1")
          echo "Built Ghostscript version: $GS_VERSION"
          echo "gs_version=$GS_VERSION" >> $GITHUB_OUTPUT

          # Verify architecture
          echo "Binary architecture info:"
          file ./bin/ghostscript
          lipo -info ./bin/ghostscript || true

          # Test the binary
          echo "Testing binary:"
          ./bin/ghostscript --version 2>/dev/null || echo "Version check completed"

          # Create tar.gz package (just the binary, no folder wrapper)
          tar -czf ghostscript-${GS_VERSION}-${{ matrix.target }}.tar.gz -C ./bin ghostscript

      - name: Upload binary artifact
        id: upload
        uses: actions/upload-artifact@v4
        with:
          name: ghostscript-${{ steps.build.outputs.gs_version }}-${{ matrix.target }}
          path: ghostscript-${{ steps.build.outputs.gs_version }}-${{ matrix.target }}.tar.gz
          retention-days: 90

  create-release:
    needs: build-ghostscript
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Get Ghostscript version
        id: get_version
        run: |
          # Extract version from artifact name
          ARTIFACT_NAME=$(ls artifacts/ | head -1)
          VERSION=$(echo "$ARTIFACT_NAME" | sed 's/ghostscript-\(.*\)-macos-.*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ghostscript-${{ steps.get_version.outputs.version }}
          name: Ghostscript ${{ steps.get_version.outputs.version }} macOS Binaries
          body: |
            Ghostscript ${{ steps.get_version.outputs.version }} standalone binaries for macOS

            **Downloads:**
            - `ghostscript-${{ steps.get_version.outputs.version }}-macos-arm64.tar.gz` - Apple Silicon (M1/M2/M3)
            - `ghostscript-${{ steps.get_version.outputs.version }}-macos-x86_64.tar.gz` - Intel processors

            **Usage:**
            ```bash
            tar -xzf ghostscript-${{ steps.get_version.outputs.version }}-macos-arm64.tar.gz
            ./ghostscript --version
            ```
          files: ./artifacts/**/*.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
